
- O ES6 é uma sígla para ecmascript e a versão e basicamente é quem decide e formula as novas funcionalidades do javaScript, como a linguagem está sendo atiualizada todos os anos, as novas regras e funcionalidades são juntadas num pacote chamado ecmascript.

- A função do Babel é pegar o código escrito com as novas funcionalidades e converter num código que todos os navegadores entendam.

- O arquivo 'package.json' vai armazenar as informações de dependecias de nossa aplicação como por exemplo o babel. As dependencias podem ser instaladas pelo proprio terminal.

- A dependencia 'babel/cli' vai nos dar a oportunidade de trabalhar com a interface de linha de comando do babel. A dependencia 'babel/preset-env' vai entender qual ambiente em que se está trabalhando como o navegador por exemplo e vai converter as fitures do ES6/7/8 para o que os navegadores entendem.

- para configurar o bable é necessário criar um arquivo chamado '.babelrc' criando um objeto e colocando o preset desejado.

- Os scripts dentro do arquivo 'package.json' são formas de a gente executar comandos dentro do nosso terminal que fazem mais de alguma coisa como por exemplo, gerar um arquivo bundle.js que é um arquivo com os códigos já convertidos para uma forma que os navegadores entendam.

- Com o ES6 agora é possível usar classes no JavaScript e as classes possuem todas as mesmas propriedades de classes como em outras linguagens de programação como método construtor, além de possuir herança de classes também, para usar herança é necessário usar o comando extends.

- Quando se cria um método constructor em uma classe que herda outra classe é muito bom a gente chamar o método constructor da classe pai, usando pra isso o comando 'Super()' e a partir dai pode-se criar as novas propriedades.

- Para se referenciar uma classe usa-se o 'new' porém é possível criar métodos estaticos da classe de forma a poder usa-los sem pra isso precisar usar o 'new', para isso existe o comando 'static' que pode ser usado antes de dar o nome da classe. Porém toda vez que a gente define um método como estatico, ele não enxerga o resto da classe.

- A Diferença do var para o const é que a const não pdoe ter seu valor reatribuido mas, pode ter o valor dentro de objetos alterados (essa operação chama-se mutação). O Let é o comando utilizado para criar variáveis de escopo, ou seja, variáveis que só podem ser vista dentro do escopo em que ela foi criada.

- A função map serve para percorrer um arrey e retornar alguma coisa de dentro. O reduce é uma função que consome todo o arrey o transforma em uma única informação. O filter é uma função que irá fazer uma filtragem de dados baseado em alguma condição especificada. A função find é usada quando a gente quer verificar se existe alguma informação dentro do arrey.

- As funções que não tem nome definido são consideradas funções anônimas e elas são os melhores lugares para se utilizar Arrow Function que é basicamente uma função escrita com uma quantidade de código bem menor e com uma sintaxe mais simples

Ex:. função sem Arrow function

const newArr = arr.map(function(item){
    return item * 2;
});


Ex:. Função com Arrow function

const newArr = arr.map(item => item * 2);

- Nas arrow functions é possivel retornar qualquer tipo de dado, porém ao tentar retornar objetos deve-se colocar parênteses antes, caso contrário o compilador vai entender as chaves do objeto como o escopo da função, retornando um erro.

- Outra funcionalidade padrão do ES6 é a de colocar valores padões para os parâmetros das funções, sejam elas funções normais ou Arrow Functions.

- O conceito de desestruturação vem como um facilitador de busca em objetos no ES6, reduzindo bastante as linhas de código para se fazer as buscas.

Ex:. Buscando em objetos sem desestruturação:

const nome = usuario.nome;
const idade = usuario.idade;
const rua = usuario.endereco.ru

Ex:. Buscando em objetos com desestruturação

const {nome, idade, endereco: {rua, estado} } = usuario;

- 

 
